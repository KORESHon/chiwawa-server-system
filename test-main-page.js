const { Pool } = require('pg');
require('dotenv').config();

const getDbHost = () => {
    if (process.env.NODE_ENV === 'production') {
        return process.env.DB_HOST || 'localhost';
    } else {
        return process.env.DB_HOST || '212.15.49.139';
    }
}

const pool = new Pool({
    host: getDbHost(),
    port: process.env.DB_PORT || 5432,
    database: process.env.DB_NAME || 'chiwawa',
    user: process.env.DB_USER || 'chiwawa',
    password: process.env.DB_PASS || 'mtU-PSM-cFP-2D6',
    max: 10,
    idleTimeoutMillis: 60000,
    connectionTimeoutMillis: 30000,
    query_timeout: 20000,
    keepAlive: true,
    keepAliveInitialDelayMillis: 0,
    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function testMainPageSettings() {
    try {
        console.log('üè† –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
        const publicSettings = ['server-name', 'server-description', 'server-ip', 'server-port', 'discord-invite', 'telegram-invite'];
        
        console.log('üìã –ü—É–±–ª–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:');
        for (const settingKey of publicSettings) {
            try {
                const result = await pool.query('SELECT setting_value FROM server_settings WHERE setting_key = $1', [settingKey]);
                if (result.rows.length > 0) {
                    console.log(`‚úÖ ${settingKey}: ${result.rows[0].setting_value}`);
                } else {
                    console.log(`‚ùå ${settingKey}: –ù–ï –ù–ê–ô–î–ï–ù–û`);
                }
            } catch (error) {
                console.log(`‚ùå ${settingKey}: –û–®–ò–ë–ö–ê - ${error.message}`);
            }
        }

        // –°–∏–º—É–ª–∏—Ä—É–µ–º API endpoint /api/settings/public
        console.log('\nüåê –°–∏–º—É–ª—è—Ü–∏—è /api/settings/public:');
        const publicSettingsQuery = await pool.query(`
            SELECT setting_key, setting_value 
            FROM server_settings 
            WHERE setting_key IN ('server-name', 'server-description', 'server-ip', 'server-port', 'discord-invite', 'telegram-invite')
        `);

        const publicSettingsResult = {};
        publicSettingsQuery.rows.forEach(row => {
            publicSettingsResult[row.setting_key] = row.setting_value;
        });

        console.log('API –æ—Ç–≤–µ—Ç:', JSON.stringify(publicSettingsResult, null, 2));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å
        console.log('\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞...');
        const testName = 'ChiwawaMine-Updated-' + Date.now();
        
        await pool.query('UPDATE server_settings SET setting_value = $1 WHERE setting_key = $2', [testName, 'server-name']);
        console.log(`üíæ –ù–∞–∑–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: ${testName}`);

        const updatedResult = await pool.query('SELECT setting_value FROM server_settings WHERE setting_key = $1', ['server-name']);
        console.log(`üìñ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ –∏–∑ –±–∞–∑—ã: ${updatedResult.rows[0].setting_value}`);

        if (updatedResult.rows[0].setting_value === testName) {
            console.log('‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è!');
        }

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
        await pool.query('UPDATE server_settings SET setting_value = $1 WHERE setting_key = $2', ['ChiwawaMine', 'server-name']);
        console.log('üîÑ –ù–∞–∑–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

        console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –∏ –∞–¥–º–∏–Ω–∫–æ–π.');

        await pool.end();
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        process.exit(1);
    }
}

testMainPageSettings();
