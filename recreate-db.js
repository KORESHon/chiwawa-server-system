const { Pool } = require('pg');
const fs = require('fs');

require('dotenv').config();

const getDbHost = () => {
    if (process.env.NODE_ENV === 'production') {
        return process.env.DB_HOST || 'localhost';
    } else {
        return process.env.DB_HOST || '212.15.49.139';
    }
}

const pool = new Pool({
    host: getDbHost(),
    port: process.env.DB_PORT || 5432,
    database: process.env.DB_NAME || 'chiwawa',
    user: process.env.DB_USER || 'chiwawa',
    password: process.env.DB_PASS || 'mtU-PSM-cFP-2D6',
    max: 10,
    idleTimeoutMillis: 60000,
    connectionTimeoutMillis: 30000,
    query_timeout: 20000,
    keepAlive: true,
    keepAliveInitialDelayMillis: 0,
    ssl: process.env.NODE_ENV === 'production' ? { rejectUnauthorized: false } : false
});

async function recreateServerSettings() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    try {
      const currentSettings = await pool.query('SELECT setting_key, setting_value FROM server_settings ORDER BY setting_key');
      console.log('=== –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò ===');
      currentSettings.rows.forEach(row => {
        console.log(`${row.setting_key}: ${row.setting_value}`);
      });
      console.log(`–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: ${currentSettings.rows.length}\n`);
    } catch (error) {
      console.log('–¢–∞–±–ª–∏—Ü–∞ server_settings –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n');
    }

    console.log('üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é...');
    try {
      await pool.query('CREATE TABLE IF NOT EXISTS server_settings_backup AS SELECT * FROM server_settings');
      console.log('‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞\n');
    } catch (error) {
      console.log('‚ÑπÔ∏è –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ (—Ç–∞–±–ª–∏—Ü–∞ –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å)\n');
    }

    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É...');
    await pool.query('DROP TABLE IF EXISTS server_settings');
    console.log('‚úÖ –°—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ —É–¥–∞–ª–µ–Ω–∞\n');

    console.log('üèóÔ∏è –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É...');
    await pool.query(`
      CREATE TABLE server_settings (
        id SERIAL PRIMARY KEY,
        setting_key VARCHAR(100) UNIQUE NOT NULL,
        setting_value TEXT,
        setting_type VARCHAR(20) DEFAULT 'string',
        category VARCHAR(50) DEFAULT 'general',
        description TEXT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_by INTEGER REFERENCES users(id)
      )
    `);
    console.log('‚úÖ –ù–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞\n');

    console.log('üìù –í—Å—Ç–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...');
    const settings = [
      // –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ (kebab-case)
      ['server-name', 'ChiwawaMine', 'string', 'general', '–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞'],
      ['server-description', '–õ—É—á—à–∏–π Minecraft —Å–µ—Ä–≤–µ—Ä —Å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º', 'string', 'general', '–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞'],
      ['server-ip', 'play.chiwawa.site', 'string', 'general', 'IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞'],
      ['server-port', '25565', 'integer', 'general', '–ü–æ—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞'],
      ['max-players', '100', 'integer', 'general', '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤'],
      ['discord-invite', 'https://discord.gg/chiwawa', 'string', 'general', '–°—Å—ã–ª–∫–∞ –Ω–∞ Discord —Å–µ—Ä–≤–µ—Ä'],
      ['telegram-invite', 'https://t.me/chiwawa', 'string', 'general', '–°—Å—ã–ª–∫–∞ –Ω–∞ Telegram –∫–∞–Ω–∞–ª'],

      // –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      ['maintenance-mode', 'false', 'boolean', 'system', '–†–µ–∂–∏–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è'],
      ['registration-enabled', 'true', 'boolean', 'system', '–†–∞–∑—Ä–µ—à–µ–Ω–∞ –ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'],
      ['auto-backup-enabled', 'true', 'boolean', 'system', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π'],

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—è–≤–æ–∫
      ['applications-enabled', 'true', 'boolean', 'applications', '–ü—Ä–∏–µ–º –∑–∞—è–≤–æ–∫ –≤–∫–ª—é—á–µ–Ω'],
      ['min-motivation-length', '50', 'integer', 'applications', '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –º–æ—Ç–∏–≤–∞—Ü–∏–∏'],
      ['min-plans-length', '30', 'integer', 'applications', '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–ª–∞–Ω–æ–≤'],
      ['max-applications-per-day', '3', 'integer', 'applications', '–ú–∞–∫—Å–∏–º—É–º –∑–∞—è–≤–æ–∫ –≤ –¥–µ–Ω—å —Å –æ–¥–Ω–æ–≥–æ IP'],
      ['auto-approve-trust-level', '2', 'integer', 'applications', '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –ø—Ä–∏ Trust Level'],

      // Trust Level —Å–∏—Å—Ç–µ–º–∞
      ['trust-points-email', '50', 'integer', 'trust', '–û—á–∫–∏ –∑–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email'],
      ['trust-points-discord', '30', 'integer', 'trust', '–û—á–∫–∏ –∑–∞ –ø—Ä–∏–≤—è–∑–∫—É Discord'],
      ['trust-points-hour', '5', 'integer', 'trust', '–û—á–∫–∏ –∑–∞ —á–∞—Å –∏–≥—Ä—ã'],
      ['trust-level-1-required', '100', 'integer', 'trust', '–û—á–∫–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è Trust Level 1'],
      ['trust-level-2-required', '500', 'integer', 'trust', '–û—á–∫–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è Trust Level 2'],
      ['trust-level-3-required', '1500', 'integer', 'trust', '–û—á–∫–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è Trust Level 3'],

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      ['max-login-attempts', '5', 'integer', 'security', '–ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞'],
      ['login-lockout-duration', '15', 'integer', 'security', '–í—Ä–µ–º—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö'],
      ['jwt-expires-days', '30', 'integer', 'security', '–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ JWT —Ç–æ–∫–µ–Ω–∞ –≤ –¥–Ω—è—Ö'],
      ['require-email-verification', 'true', 'boolean', 'security', '–¢—Ä–µ–±–æ–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email'],
      ['two-factor-enabled', 'false', 'boolean', 'security', '–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è'],
      ['rate-limit-requests', '100', 'integer', 'security', '–õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É'],

      // Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      ['smtp-host', 'smtp.yandex.ru', 'string', 'email', 'SMTP —Å–µ—Ä–≤–µ—Ä'],
      ['smtp-port', '465', 'integer', 'email', 'SMTP –ø–æ—Ä—Ç'],
      ['smtp-from', 'noreply@chiwawa.site', 'string', 'email', 'Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è'],
      ['smtp-user', '', 'string', 'email', 'SMTP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'],
      ['smtp-password', '', 'string', 'email', 'SMTP –ø–∞—Ä–æ–ª—å'],
      ['smtp-tls', 'true', 'boolean', 'email', '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å TLS/SSL'],
      ['smtp-sender-name', 'ChiwawaMine', 'string', 'email', '–ò–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è'],
      ['smtp-reply-to', '', 'string', 'email', 'Reply-To –∞–¥—Ä–µ—Å'],
      ['email-notifications-enabled', 'true', 'boolean', 'email', 'Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã'],
      ['smtp-timeout', '30', 'integer', 'email', '–¢–∞–π–º-–∞—É—Ç SMTP –≤ —Å–µ–∫—É–Ω–¥–∞—Ö']
    ];

    for (const [key, value, type, category, description] of settings) {
      await pool.query(`
        INSERT INTO server_settings (setting_key, setting_value, setting_type, category, description) 
        VALUES ($1, $2, $3, $4, $5)
      `, [key, value, type, category, description]);
    }

    console.log(`‚úÖ –í—Å—Ç–∞–≤–ª–µ–Ω–æ ${settings.length} –Ω–∞—Å—Ç—Ä–æ–µ–∫\n`);

    console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    const result = await pool.query('SELECT setting_key, setting_value, category FROM server_settings ORDER BY category, setting_key');
    result.rows.forEach(row => {
      console.log(`[${row.category}] ${row.setting_key}: ${row.setting_value}`);
    });
    console.log(`\nüéâ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å ${result.rows.length} –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏!`);

    await pool.end();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    process.exit(1);
  }
}

recreateServerSettings();
