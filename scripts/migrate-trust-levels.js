// –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏: –ü–µ—Ä–µ—Å–º–æ—Ç—Ä —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∞—Å—Ç –ª–µ–≤–µ–ª–æ–≤
// –°–æ–∑–¥–∞—Ç–µ–ª—å: ebluffy

const { Pool } = require('pg');
const fs = require('fs').promises;
const path = require('path');

const pool = new Pool({
    host: '212.15.49.139',
    port: 5432,
    database: 'chiwawa',
    user: 'chiwawa',
    password: 'mtU-PSM-cFP-2D6',
    ssl: false
});

async function runMigration() {
    const client = await pool.connect();
    
    try {
        console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–∞—Å—Ç –ª–µ–≤–µ–ª–æ–≤...');
        
        const migrationPath = path.join(__dirname, '../database/migrations/002_trust_level_system_rework.sql');
        const migrationSql = await fs.readFile(migrationPath, 'utf8');
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
        await client.query(migrationSql);
        
        console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const usersResult = await client.query('SELECT count(*) as total, trust_level FROM users GROUP BY trust_level ORDER BY trust_level');
        console.log('üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ç—Ä–∞—Å—Ç –ª–µ–≤–µ–ª–∞–º:');
        usersResult.rows.forEach(row => {
            const levelName = ['–ü—Ä–æ—Ö–æ–¥–∏–º–µ—Ü', '–ù–æ–≤–∏—á–æ–∫', '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π', '–í–µ—Ç–µ—Ä–∞–Ω'][row.trust_level] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
            console.log(`   Level ${row.trust_level} (${levelName}): ${row.total} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
        });
        
        const reputationResult = await client.query('SELECT count(*) as total FROM user_reputation');
        console.log(`üíé –°–æ–∑–¥–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–∏: ${reputationResult.rows[0].total}`);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        throw error;
    } finally {
        client.release();
        await pool.end();
    }
}

if (require.main === module) {
    runMigration().catch(console.error);
}

module.exports = { runMigration };
