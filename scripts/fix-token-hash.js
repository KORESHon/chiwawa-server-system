const { Pool } = require('pg');

const pool = new Pool({
    user: 'chiwawa',
    host: '212.15.49.139',
    database: 'chiwawa',
    password: 'mtU-PSM-cFP-2D6',
    port: 5432,
});

async function checkTokenHashField() {
    try {
        console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–µ token_hash...');
        
        const result = await pool.query(`
            SELECT column_name, data_type, character_maximum_length 
            FROM information_schema.columns 
            WHERE table_name = 'user_sessions' AND column_name = 'token_hash'
        `);
        
        if (result.rows.length === 0) {
            console.log('‚ùå –ü–æ–ª–µ token_hash –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        const field = result.rows[0];
        console.log(`üìä –¢–µ–∫—É—â–∏–π —Ç–∏–ø –ø–æ–ª—è token_hash: ${field.data_type}(${field.character_maximum_length || '–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'})`);
        
        if (field.data_type === 'text' || field.character_maximum_length >= 500) {
            console.log('‚úÖ –ü–æ–ª–µ token_hash –∏–º–µ–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –¥–ª–∏–Ω—É');
            return;
        }
        
        console.log('üîß –ò–∑–º–µ–Ω—è–µ–º –ø–æ–ª–µ token_hash –Ω–∞ TEXT...');
        await pool.query('ALTER TABLE user_sessions ALTER COLUMN token_hash TYPE TEXT');
        console.log('‚úÖ –ü–æ–ª–µ token_hash —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ TEXT');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

checkTokenHashField();
